// Code generated by MockGen. DO NOT EDIT.
// Source: internal/balance/usecase.go

// Package mock_balance is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/polyanimal/balance/internal/models"
)

// MockUseCase is a mock of UseCase interface.
type MockUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockUseCaseMockRecorder
}

// MockUseCaseMockRecorder is the mock recorder for MockUseCase.
type MockUseCaseMockRecorder struct {
	mock *MockUseCase
}

// NewMockUseCase creates a new mock instance.
func NewMockUseCase(ctrl *gomock.Controller) *MockUseCase {
	mock := &MockUseCase{ctrl: ctrl}
	mock.recorder = &MockUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUseCase) EXPECT() *MockUseCaseMockRecorder {
	return m.recorder
}

// AlterFunds mocks base method.
func (m *MockUseCase) AlterFunds(id string, funds int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AlterFunds", id, funds)
	ret0, _ := ret[0].(error)
	return ret0
}

// AlterFunds indicates an expected call of AlterFunds.
func (mr *MockUseCaseMockRecorder) AlterFunds(id, funds interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AlterFunds", reflect.TypeOf((*MockUseCase)(nil).AlterFunds), id, funds)
}

// GetBalance mocks base method.
func (m *MockUseCase) GetBalance(id, currency string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalance", id, currency)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBalance indicates an expected call of GetBalance.
func (mr *MockUseCaseMockRecorder) GetBalance(id, currency interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalance", reflect.TypeOf((*MockUseCase)(nil).GetBalance), id, currency)
}

// GetTransactions mocks base method.
func (m *MockUseCase) GetTransactions(request models.TransactionsRequest) ([]models.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactions", request)
	ret0, _ := ret[0].([]models.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransactions indicates an expected call of GetTransactions.
func (mr *MockUseCaseMockRecorder) GetTransactions(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactions", reflect.TypeOf((*MockUseCase)(nil).GetTransactions), request)
}

// TransferFunds mocks base method.
func (m *MockUseCase) TransferFunds(idFrom, idTo string, funds int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransferFunds", idFrom, idTo, funds)
	ret0, _ := ret[0].(error)
	return ret0
}

// TransferFunds indicates an expected call of TransferFunds.
func (mr *MockUseCaseMockRecorder) TransferFunds(idFrom, idTo, funds interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransferFunds", reflect.TypeOf((*MockUseCase)(nil).TransferFunds), idFrom, idTo, funds)
}
